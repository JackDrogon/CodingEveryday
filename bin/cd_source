#!/usr/bin/env ruby

# TODO: Parallel... ThreadPool

SourceDir = "#{ENV['HOME']}/Source"
GithubSourceDir = "#{ENV['HOME']}/Source/Github"
Level = 6
src = ARGV[0]

def is_git_(dir)
  Dir.exist? "#{dir}/.git"
end

def is_7z_(file)
  File.exist?(file) && ! Dir.exist?(file)
end

def cd_source_(dir, src, level)
  dirs = Dir["#{dir}/*"]
  # src_7z = src + ".7z"

  return if ! dirs

  dirs.each { |d|
    name = d.split("/").last
    # if name == src_7z || name == src
    if name =~ /^#{src}((\.|(-[0-9]+)).*)?$/
      # puts src, "name", /^#{src}((\.|-?).*)?$/
      puts d
      exit 0
    end

    break if ! Dir["#{d}/*"]

    if is_git_(d)
      if name == src
        puts d
        exit 0 # 为什么这里用return不行啊, 了解 这里这是返回了上层的cd_source_,还会继续执行接下来的d
      end
    else
      cd_source_(d, src, level+1) if Dir.exist?(d) && level < Level
    end
  }
end

cd_source_ GithubSourceDir, src, 0
cd_source_ SourceDir, src, 0
